<#
.SYNOPSIS
    Generate disassembly and machine code files for the 2015 Microsoft Malware Classification Challenge.
.DESCRIPTION
    Generate disassembly and machine code files for the 2015 Microsoft Malware Classification Challenge.
    This script must be located in the same folder as `generator.py` and `generation_cmd.py`.

.PARAMETER InputDirectory
    An input directory containing original executable files.
.PARAMETER OutputDirectory
    An output directory to save disassembly and machine code files.
.EXAMPLE
    PS> .\Generate-Samples.ps1 -InputDirectory . -OutputDirectory .\output
.LINK
    https://github.com/czs108/Microsoft-Malware-Classification
.NOTES
    Author: Chen Zhenshuo
    GitHub: https://github.com/czs108
    E-Mail: chenzs108@outlook.com
#>

[CmdletBinding()]
param (
    [Parameter(Mandatory)]
    [String]$InputDirectory,

    [Parameter(Mandatory)]
    [String]$OutputDirectory
)

try {

    New-Variable -Name 'Generation' -Value 'generation_cmd.py' -Option Constant
    New-Item -Path $OutputDirectory -ItemType 'Directory' -Force | Out-Null
    $Script = Join-Path -Path $(Get-Location) -ChildPath $Generation

    foreach ($File in Get-ChildItem -Path (Join-Path -Path $InputDirectory -ChildPath '*') -File -Include '*.exe', '*.dll') {
        Start-Process -FilePath 'ida' -ArgumentList '-A', "`"-S$Script`"", "`"$($File.FullName)`"" -NoNewWindow -Wait
        Remove-Item -Path "$($File.FullName).idb" -Force
        Move-Item -Path "$($File.FullName).asm" -Destination $OutputDirectory -Force
        Move-Item -Path "$($File.FullName).bytes" -Destination $OutputDirectory -Force
        Write-Host "'$($File.Name)' has been processed."
    }

} catch {
    Write-Host "Exception: $PSItem" -ForegroundColor Red
}